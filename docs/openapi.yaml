# SPDX-FileCopyrightText: 2025 SecPal Contributors
# SPDX-License-Identifier: AGPL-3.0-or-later

openapi: 3.1.0
info:
  title: SecPal API
  description: |
    This is the official API for SecPal, a digital guard book and security operations platform.
    It provides endpoints for managing guards, shifts, reports, and other security-related resources.
  version: 0.0.1
  contact:
    name: SecPal API Support
    url: https://github.com/SecPal
    email: support@secpal.app
  license:
    name: AGPL-3.0-or-later
    url: https://spdx.org/licenses/AGPL-3.0-or-later.html

servers:
  - url: https://api.secpal.app/v1
    description: Production Server
  - url: https://api.staging.secpal.app/v1
    description: Staging Server

security: []

components:
  schemas:
    Error:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
          description: Human-readable error message
          example: Resource not found
        code:
          type: string
          description: Machine-readable error code
          example: RESOURCE_NOT_FOUND
        details:
          type: object
          description: Additional error details
          additionalProperties: true

    HealthStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [ok, error]
          description: Health status of the API
          example: ok
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the health check
          example: '2025-10-25T19:25:00Z'

  responses:
    BadRequest:
      description: Bad Request - Invalid input parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Invalid request parameters
            code: BAD_REQUEST

    Unauthorized:
      description: Unauthorized - Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Authentication required
            code: UNAUTHORIZED

    Forbidden:
      description: Forbidden - Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Insufficient permissions
            code: FORBIDDEN

    NotFound:
      description: Not Found - Resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Resource not found
            code: NOT_FOUND

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: An internal error occurred
            code: INTERNAL_ERROR

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT-based authentication. Include the token in the Authorization header:
        `Authorization: Bearer <token>`

paths:
  /health:
    get:
      summary: Health Check
      description: Provides the health status of the API.
      operationId: getHealth
      tags:
        - Monitoring
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Service temporarily unavailable
                code: SERVICE_UNAVAILABLE
